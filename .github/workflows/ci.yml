name: CI
on: [push]
jobs:
  # build:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [macos-latest, ubuntu-latest, windows-latest]
  #       node: ['16', '18', '19']
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node }}
  #     - run: npm ci --omit=dev
  #     - run: npm ci
  #     - run: npm run test:lint
  #       if: matrix.os != 'windows-latest'
  #     - run: npm run test:unit

  docker:
    name: Build and test Docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    env:
      REGISTRY: ghcr.io

    steps:
      - uses: actions/checkout@v3

      - uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: "arm64"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and load Docker image
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: core-test
          cache-from: type=registry,ref=ghcr.io/filecoin-station/core
          cache-to: type=inline

      - name: Build Docker image for other platforms
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/arm64
          cache-from: type=registry,ref=ghcr.io/filecoin-station/core
          cache-to: type=inline

      - name: Start Station Core container
        run: |
         docker run \
           --name station \
           --detach \
           --env FIL_WALLET_ADDRESS=f1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za \
           $IMAGEID
        env:
          IMAGEID: ${{ steps.docker_build.outputs.imageid }}

      - name: Verify container activity
        run: |
          docker exec station bin/station.js activity
          LOGS=$(docker exec station bin/station.js activity)
          echo $LOGS
          echo $LOGS | grep "Saturn module started"
          echo $LOGS | grep "Module Runtime started"

